z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+ c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2 + 1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args (list.files)
getwd()
old.dir<- getwd()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
files.exists("mytest.R")
file.exists("mytest.R")
file.info("mytest.R")
args(file.rename)
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path('folder1','folder2')
?dir.create
dir.create(file.path,"testdir3")
dir.create("testdir2",file.path("testdir3")
testdir3
dir.create("testdir2",file.path)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
dir.delete("testdir")
unlink ('testdir',recursive=TRUE)
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5)
my_seq<- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(05,55,-10,6)
?c
num_vect <- c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char,"saaroj")
my_name
paste(myname,collapse=" ")
paste(my_name,collapse=" ")
paste("Hello", "world!", sep = " ")
paste(c(1:3),c("X","Y",Z""),sep="")
paste(c(1:3),c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep = "-")
x<-c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)
]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2,
| norf = NA).
vect <- c(foo = 11, bar = 2,
norf = NA)
vect
names(vect)
vect2<-c(11, 2, NA)
names(vect2) <-
c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector<-c(1:20)
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina"," Kelly","Sean")
patients <- ("Bill", "Gina"," Kelly","Sean")
patients <- c("Bill", "Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "weight",
"bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE==TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE |
| c(TRUE, FALSE, FALSE)
TRUE |
c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which (ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
submit()
source('C:/Users/User/AppData/Local/Temp/Rtmpuyqqlw/boring_function.R')
submit()
submit()
submit()
source('C:/Users/User/AppData/Local/Temp/Rtmpuyqqlw/boring_function.R')
submit()
bye()
swirl()
subnit()
submit()
source('C:/Users/User/AppData/Local/Temp/Rtmpuyqqlw/boring_function.R')
submit()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
install_from_swirl("Exploratory Data Analysis")
getwd()
dir.create (ExploratoryAnalysis)
dir.create (C:/Users/User/Documents/ExploratoryAnalysis)
dir.create ("ExploratoryAnalysis")
dir()
setwd (C:/Users/User/Documents/ExploratoryAnalysis)
setwd ("C:/Users/User/Documents/ExploratoryAnalysis")
getwd()
?read.csv
source('~/ExploratoryAnalysis/plot1.R')
source('~/ExploratoryAnalysis/plot1.R')
source('~/ExploratoryAnalysis/plot1.R')
getwd()
setwd("C:/Users/User/Documents")
source('~/ExploratoryAnalysis/plot1.R')
source('~/ExploratoryAnalysis/plot1.R')
source('~/ExploratoryAnalysis/plot1.R')
dev.copy(png, file="plot1.png", height=480, width=480)
dev.off()
dev.off()
source('~/ExploratoryAnalysis/plot1.R')
source('~/ExploratoryAnalysis/plot1.R')
##get file path
data_file<-"./data/household_power_consumption.txt"
##get dataset
data_set<-read.table(data_file, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
subset_data <- data_set[data_set$Date %in% c("1/2/2007","2/2/2007") ,]
## Converting dates
globalActivePower <- as.numeric(subSet_data$Global_active_power)
png("plot1.png", width=480, height=480)
hist(globalActivePower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.off()
getwd()
dir()
##get file path
data_file<-"./Data/household_power_consumption.txt"
##get dataset
data_set<-read.table(data_file, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
subset_data <- data_set[data_set$Date %in% c("1/2/2007","2/2/2007") ,]
## Converting dates
globalActivePower <- as.numeric(subset_data$Global_active_power)
png("plot1.png", width=480, height=480)
hist(globalActivePower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.off()
##get file path
data_file<-"./Data/household_power_consumption.txt"
##get dataset
data_set<-read.table(data_file, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
subset_data <- data_set[data_set$Date %in% c("1/2/2007","2/2/2007") ,]
datetime <- strptime(paste(subset_data$Date, subset_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
globalActivePower <- as.numeric(subset_data$Global_active_power)
png("plot2.png", width=480, height=480)
plot(datetime, globalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
##get file path
data_file<-"./Data/household_power_consumption.txt"
##get dataset
data_set<-read.table(data_file, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
subset_data <- data_set[data_set$Date %in% c("1/2/2007","2/2/2007") ,]
datetime <- strptime(paste(subset_data$Date, subset_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
globalActivePower <- as.numeric(subset_data$Global_active_power)
subMetering_1 <- as.numeric(subset_data$Sub_metering_1)
subMetering_2 <- as.numeric(subset_data$Sub_metering_2)
subMetering_3 <- as.numeric(subset_data$Sub_metering_3)
png("plot3.png", width=480, height=480)
plot(datetime, subMetering_1, type="l", ylab="Energy Submetering", xlab="")
lines(datetime, subMetering_2, type="l", col="red")
lines(datetime, subMetering_3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
dev.off()
##get file path
data_file<-"./Data/household_power_consumption.txt"
##get dataset
data_set<-read.table(data_file, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
subset_data <- data_set[data_set$Date %in% c("1/2/2007","2/2/2007") ,]
datetime <- strptime(paste(subset_data$Date, subset_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
globalActivePower <- as.numeric(subset_data$Global_active_power)
globalReactivePower <- as.numeric(subset_data$Global_reactive_power)
voltage <- as.numeric(subset_data$Voltage)
subMetering_1 <- as.numeric(subset_data$Sub_metering_1)
subMetering_2 <- as.numeric(subset_data$Sub_metering_2)
subMetering_3 <- as.numeric(subset_data$Sub_metering_3)
png("plot4.png", width=480, height=480)
par(mfrow = c(2, 2))
plot(datetime, globalActivePower, type="l", xlab="", ylab="Global Active Power", cex=0.2)
plot(datetime, voltage, type="l", xlab="datetime", ylab="Voltage")
plot(datetime, subMetering_1, type="l", ylab="Energy Submetering", xlab="")
lines(datetime, subMetering_2, type="l", col="red")
lines(datetime, subMetering_3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=, lwd=2.5, col=c("black", "red", "blue"), bty="o")
plot(datetime, globalReactivePower, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.off()
##get file path
data_file<-"./Data/household_power_consumption.txt"
##get dataset
data_set<-read.table(data_file, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
##subsetting data
subset_data <- data_set[data_set$Date %in% c("1/2/2007","2/2/2007") ,]
Global_ActivePower <- as.numeric(subset_data$Global_active_power)
##Plotting the data
png("plot1.png", width=480, height=480)
hist(Global_ActivePower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.off()
##get data set
data_file<-"./Data/household_power_consumption.txt"
data_set<-read.table(data_file, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
##subset required data
subset_data <- data_set[data_set$Date %in% c("1/2/2007","2/2/2007") ,]
datetime <- strptime(paste(subset_data$Date, subset_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
Global_ActivePower <- as.numeric(subset_data$Global_active_power)
##plot data
png("plot2.png", width=480, height=480)
plot(datetime, Global_ActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
##get data set
data_file<-"./Data/household_power_consumption.txt"
data_set<-read.table(data_file, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
##subset required data
subset_data <- data_set[data_set$Date %in% c("1/2/2007","2/2/2007") ,]
datetime <- strptime(paste(subset_data$Date, subset_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
Global_ActivePower <- as.numeric(subset_data$Global_active_power)
subMetering_1 <- as.numeric(subset_data$Sub_metering_1)
subMetering_2 <- as.numeric(subset_data$Sub_metering_2)
subMetering_3 <- as.numeric(subset_data$Sub_metering_3)
##plot to png
png("plot3.png", width=480, height=480)
plot(datetime, subMetering_1, type="l", ylab="Energy SubMetering", xlab="")
lines(datetime, subMetering_2, type="l", col="red")
lines(datetime, subMetering_3, type="l", col="blue")
legend("topright", c("SubMetering_1", "SubMetering_2", "SubMetering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
dev.off()
##get data set
data_file<-"./Data/household_power_consumption.txt"
data_set<-read.table(data_file, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
##subset required data
subset_data <- data_set[data_set$Date %in% c("1/2/2007","2/2/2007") ,]
datetime <- strptime(paste(subset_data$Date, subset_data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
Global_ActivePower <- as.numeric(subset_data$Global_active_power)
Global_ReactivePower <- as.numeric(subset_data$Global_reactive_power)
voltage <- as.numeric(subset_data$Voltage)
subMetering_1 <- as.numeric(subset_data$Sub_metering_1)
subMetering_2 <- as.numeric(subset_data$Sub_metering_2)
subMetering_3 <- as.numeric(subset_data$Sub_metering_3)
##Plot
png("plot4.png", width=480, height=480)
par(mfrow = c(2, 2))
plot(datetime, Global_ReactivePower, type="l", xlab="", ylab="Global Active Power", cex=0.2)
plot(datetime, voltage, type="l", xlab="datetime", ylab="Voltage")
plot(datetime, subMetering_1, type="l", ylab="Energy Submetering", xlab="")
lines(datetime, subMetering_2, type="l", col="red")
lines(datetime, subMetering_3, type="l", col="blue")
legend("topright", c("SubMetering1", "SubMetering2", "SubMetering3"), lty=, lwd=2.5, col=c("black", "red", "blue"), bty="o")
plot(datetime, Global_ReactivePower, type="l", xlab="datetime", ylab="Global_ReactivePower")
dev.off()
sum(q5[, 4])
library(httr)
library(httpuv)
# github oauth settings
myapp <- oauth_app("github",
key = "9ac78a3b36b3862ed435",
secret = "e1c3be242976383cc5f28dae177d41eef5445e3f")
# get oauth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
myapp ", secret = "")
github_token  req  stop_for_status(req)
content(req)
BROWSE("https://api.github.com/users/jtleek/repos",authenticate("Access Token","x-oauth-basic","basic"))
install.packages("shiny")
setwd(C:\Users\User\Documents\GitHub\Developing_Data_Products)
setwd(C:\Users\User\Documents\GitHub\Developing_Data_Products\)
setwd("C:\Users\User\Documents\GitHub\Developing_Data_Products")
setwd (C:\Users\User\Documents\GitHub\Developing_Data_Products)
setwd C:\Users\User\Documents\GitHub\Developing_Data_Products
setwd ("C:/Users/User/Documents/GitHub/Developing_Data_Products")
dir
getwd
getwd()
dir()
returnValue <- 'Higher than the number.'
#install.packages("shiny")
library(shiny)
#the computer guesses an integer between
number <- floor(runif(1,1,101))
#print(number)
numberGuessed <- function(guess, number)
{
returnValue <- "Nothing entered yet."
if (guess > 100) {
#print(guess)
#print(class(guess))
#print(class(100))
returnValue <- 'Above 100.\nPlease make a selection between 1 and 100.'
}
else if (guess < 1) {
#print(guess)
returnValue <- 'Below 1.\nPlease make a selection between 1 and 100.'
}
else if (guess > number) {
returnValue <- 'Higher than the number.'
}
else if (guess < number) {
returnValue <- 'Lower than the number.'
}
source('~/GitHub/Developing_Data_Products/server.R')
sadasdasd
dir()
run
#install.packages("shiny")
library(shiny)
#the computer guesses an integer between
number <- floor(runif(1,1,101))
#print(number)
numberGuessed <- function(guess, number)
{
returnValue <- "Nothing entered yet."
if (guess > 100) {
#print(guess)
#print(class(guess))
#print(class(100))
returnValue <- 'Above 100.\nPlease make a selection between 1 and 100.'
}
else if (guess < 1) {
#print(guess)
returnValue <- 'Below 1.\nPlease make a selection between 1 and 100.'
}
else if (guess > number) {
returnValue <- 'Higher than the number.'
}
else if (guess < number) {
returnValue <- 'Lower than the number.'
}
f()ecit
#install.packages("shiny")
library(shiny)
#the computer guesses an integer between
number <- floor(runif(1,1,101))
#print(number)
numberGuessed <- function(guess, number)
{
returnValue <- "Nothing entered yet."
if (guess > 100) {
#print(guess)
#print(class(guess))
#print(class(100))
returnValue <- 'Above 100.\nPlease make a selection between 1 and 100.'
}
else if (guess < 1) {
#print(guess)
returnValue <- 'Below 1.\nPlease make a selection between 1 and 100.'
}
else if (guess > number) {
returnValue <- 'Higher than the number.'
}
else if (guess < number) {
returnValue <- 'Lower than the number.'
}
asdasdsad
sadxzc
exit
9
0909090
()
server.R
getwd()
dir()
server.R
server
server.R()
{
install.packages("shiny")
library(shiny)
#the computer guesses an integer between
number <- floor(runif(1,1,101))
#print(number)
numberGuessed <- function(guess, number)
{
returnValue <- "Nothing entered yet."
if (guess > 100) {
#print(guess)
#print(class(guess))
#print(class(100))
returnValue <- 'Above 100.\nPlease make a selection between 1 and 100.'
}
else if (guess < 1) {
#print(guess)
returnValue <- 'Below 1.\nPlease make a selection between 1 and 100.'
}
else if (guess > number) {
returnValue <- 'Higher than the number.'
}
else if (guess < number) {
returnValue <- 'Lower than the number.'
}
1
2
3
4
5
6
6
7
7
()
install.packages("shiny")
library(shiny)
#the computer guesses an integer between
number <- floor(runif(1,1,101))
#print(number)
numberGuessed <- function(guess, number)
{
returnValue <- "Nothing entered yet."
if (guess > 100) {
#print(guess)
#print(class(guess))
#print(class(100))
returnValue <- 'Above 100.\nPlease make a selection between 1 and 100.'
}
else if (guess < 1) {
#print(guess)
returnValue <- 'Below 1.\nPlease make a selection between 1 and 100.'
}
else if (guess > number) {
returnValue <- 'Higher than the number.'
}
else if (guess < number) {
returnValue <- 'Lower than the number.'
}
()
source("server.R")
source("server.R")
source("server.R")
